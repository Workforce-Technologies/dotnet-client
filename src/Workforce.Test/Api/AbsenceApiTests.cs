/* 
 * Workforce API
 *
 * Public API for the Workforce software
 *
 * The version of the OpenAPI document: v1
 * Contact: adamlonsdale@me.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Workforce.Client;
using Workforce.Api;
using Workforce.Model;

namespace Workforce.Test
{
    /// <summary>
    ///  Class for testing AbsenceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AbsenceApiTests : IDisposable
    {
        private AbsenceApi instance;

        public AbsenceApiTests()
        {
            instance = new AbsenceApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AbsenceApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AbsenceApi
            //Assert.IsType(typeof(AbsenceApi), instance, "instance is a AbsenceApi");
        }

        
        /// <summary>
        /// Test CreateOrUpdateAbsence
        /// </summary>
        [Fact]
        public void CreateOrUpdateAbsenceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Absence absence = null;
            //instance.CreateOrUpdateAbsence(absence);
            
        }
        
        /// <summary>
        /// Test DeleteAbsence
        /// </summary>
        [Fact]
        public void DeleteAbsenceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? id = null;
            //instance.DeleteAbsence(id);
            
        }
        
        /// <summary>
        /// Test GetAbsence
        /// </summary>
        [Fact]
        public void GetAbsenceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetAbsence(id);
            //Assert.IsType<Absence> (response, "response is Absence");
        }
        
        /// <summary>
        /// Test GetAbsences
        /// </summary>
        [Fact]
        public void GetAbsencesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAbsences();
            //Assert.IsType<List<Absence>> (response, "response is List<Absence>");
        }
        
        /// <summary>
        /// Test GetAbsencesForEmployee
        /// </summary>
        [Fact]
        public void GetAbsencesForEmployeeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetAbsencesForEmployee(id);
            //Assert.IsType<List<Absence>> (response, "response is List<Absence>");
        }
        
        /// <summary>
        /// Test SearchAbsences
        /// </summary>
        [Fact]
        public void SearchAbsencesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AbsenceSearchCriteria absenceSearchCriteria = null;
            //var response = instance.SearchAbsences(absenceSearchCriteria);
            //Assert.IsType<List<Absence>> (response, "response is List<Absence>");
        }
        
    }

}
