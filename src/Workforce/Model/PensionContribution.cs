/* 
 * Workforce API
 *
 * Public API for the Workforce software
 *
 * The version of the OpenAPI document: v1
 * Contact: adamlonsdale@me.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Workforce.Client.OpenAPIDateConverter;

namespace Workforce.Model
{
    /// <summary>
    /// PensionContribution
    /// </summary>
    [DataContract]
    public partial class PensionContribution :  IEquatable<PensionContribution>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PensionContribution" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PensionContribution() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PensionContribution" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="employeeId">employeeId (required).</param>
        /// <param name="validFrom">validFrom (required).</param>
        /// <param name="employeeContributionPercent">employeeContributionPercent.</param>
        /// <param name="employerContributionPercent">employerContributionPercent.</param>
        public PensionContribution(Guid id = default(Guid), Guid employeeId = default(Guid), DateTime validFrom = default(DateTime), double employeeContributionPercent = default(double), double employerContributionPercent = default(double))
        {
            this.EmployeeId = employeeId;
            this.ValidFrom = validFrom;
            this.Id = id;
            this.EmployeeContributionPercent = employeeContributionPercent;
            this.EmployerContributionPercent = employerContributionPercent;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or Sets EmployeeId
        /// </summary>
        [DataMember(Name="employeeId", EmitDefaultValue=false)]
        public Guid EmployeeId { get; set; }

        /// <summary>
        /// Gets or Sets ValidFrom
        /// </summary>
        [DataMember(Name="validFrom", EmitDefaultValue=false)]
        public DateTime ValidFrom { get; set; }

        /// <summary>
        /// Gets or Sets EmployeeContributionPercent
        /// </summary>
        [DataMember(Name="employeeContributionPercent", EmitDefaultValue=false)]
        public double EmployeeContributionPercent { get; set; }

        /// <summary>
        /// Gets or Sets EmployerContributionPercent
        /// </summary>
        [DataMember(Name="employerContributionPercent", EmitDefaultValue=false)]
        public double EmployerContributionPercent { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PensionContribution {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  EmployeeId: ").Append(EmployeeId).Append("\n");
            sb.Append("  ValidFrom: ").Append(ValidFrom).Append("\n");
            sb.Append("  EmployeeContributionPercent: ").Append(EmployeeContributionPercent).Append("\n");
            sb.Append("  EmployerContributionPercent: ").Append(EmployerContributionPercent).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PensionContribution);
        }

        /// <summary>
        /// Returns true if PensionContribution instances are equal
        /// </summary>
        /// <param name="input">Instance of PensionContribution to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PensionContribution input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.EmployeeId == input.EmployeeId ||
                    (this.EmployeeId != null &&
                    this.EmployeeId.Equals(input.EmployeeId))
                ) && 
                (
                    this.ValidFrom == input.ValidFrom ||
                    (this.ValidFrom != null &&
                    this.ValidFrom.Equals(input.ValidFrom))
                ) && 
                (
                    this.EmployeeContributionPercent == input.EmployeeContributionPercent ||
                    this.EmployeeContributionPercent.Equals(input.EmployeeContributionPercent)
                ) && 
                (
                    this.EmployerContributionPercent == input.EmployerContributionPercent ||
                    this.EmployerContributionPercent.Equals(input.EmployerContributionPercent)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.EmployeeId != null)
                    hashCode = hashCode * 59 + this.EmployeeId.GetHashCode();
                if (this.ValidFrom != null)
                    hashCode = hashCode * 59 + this.ValidFrom.GetHashCode();
                hashCode = hashCode * 59 + this.EmployeeContributionPercent.GetHashCode();
                hashCode = hashCode * 59 + this.EmployerContributionPercent.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
